import { useEffect, useState } from 'react';
import API from '../../services/api';
import AdminStatsCard from '../../components/admin/AdminStatsCard';
import LoadingSpinner from '../../components/LoadingSpinner';
import './admin.css';

export default function DashboardPage() {
  const [stats, setStats] = useState(null); // null –≤–º–µ—Å—Ç–æ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  const [error, setError] = useState(null);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const fetchStats = async () => {
      try {
        const { data } = await API.get('/users/admin-stats'); // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞!
        setStats(data);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
        setStats({ usersCount: 0, questionsCount: 0, testsCompleted: 0 }); // Fallback –¥–∞–Ω–Ω—ã–µ
      }
    };

    fetchStats();
  }, []);

  if (error) {
    return (
      <div className="alert alert-danger">
        {error}
        <button onClick={() => window.location.reload()}>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
      </div>
    );
  }

  if (!stats) return <LoadingSpinner fullPage />;

  return (
    <div className="dashboard-page">
      <h1>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥</h1>
      
      {isLoading ? (
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</div>
      ) : (
        <div className="stats-grid">
          <AdminStatsCard 
            title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" 
            value={stats.usersCount} 
            icon="üë•"
          />
          <AdminStatsCard 
            title="–í–æ–ø—Ä–æ—Å—ã" 
            value={stats.questionsCount} 
            icon="‚ùì"
          />
          <AdminStatsCard 
            title="–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤" 
            value={stats.testsCompleted} 
            icon="‚úÖ"
          />
        </div>
      )}
    </div>
  );
}